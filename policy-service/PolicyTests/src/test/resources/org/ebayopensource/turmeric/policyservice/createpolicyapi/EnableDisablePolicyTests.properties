###############################################################################
# Copyright (c) 2006-2010 eBay Inc. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
###############################################################################

# This file consists enable, disable policy tests
# The format of request is --> 
#PolicyKey (Policy type + id or type + name) ; PolicyKey  = PolicyId:PolicyType:PolicyName
# The response format is --> AckValue|errorMessage|

# Pre-Requisite policies
testcase.prerequisite.subjects =IP:111.111.112.112
testcase.prerequisite.subjectgroups = IP:TestSG01:Test subjectgroup:111.111.112.112
testcase.prerequisite.resources =SERVICE:Test_Service_01:TestOp1;SERVICE:Test_Service_02:TestOp2
testcase.prerequisite.policies =AUTHZ:Test_AUTHZ_policy_01|SERVICE:Test_Service_01|IP:TestSG01;BLACKLIST:Test_BL_policy_01|SERVICE:Test_Service_01|IP:TestSG01;\
WHITELIST:Test_WL_policy_01|SERVICE:Test_Service_01|IP:TestSG01;RL:Test_RL_policy_01|SERVICE:Test_Service_01|IP:TestSG01;\
BLACKLIST:Test_BL_policy_02;WHITELIST:Test_WL_policy_02

# Enable Policy
 
#Request for Enable Authz policy with policykey( name & type)
testcase0.name = Enable Authz policy with policykey( name & type)
testcase0.request.policykey = null:AUTHZ:Test_AUTHZ_policy_01
testcase0.request.enablepolicy = true
testcase0.response = Success|null

#Request for Enable Authz policy with policykey( id & type)
testcase1.name = Enable Authz policy with policykey( id & type)
testcase1.request.policykey = ?:AUTHZ:Test_AUTHZ_policy_01
testcase1.request.enablepolicy = true
testcase1.response = Success|null

#Request for Enable Blacklist (BL) policy with policykey ( name & type) 
testcase2.name = Enable Blacklist (BL) policy with policykey ( name & type) 
testcase2.request.policykey = null:BLACKLIST:Test_BL_policy_01
testcase2.request.enablepolicy = true
testcase2.response = Success|null

#Request for Enable Blacklist (BL) policy with policykey (id & type)
testcase3.name = Enable Blacklist (BL) policy with policykey (id & type)
testcase3.request.policykey = ?:BLACKLIST:Test_BL_policy_01
testcase3.request.enablepolicy = true
testcase3.response = Success|null

#Request for Enable Whitelist (WL) policy with policykey (name & type)
testcase4.name = Enable Whitelist (WL) policy with policykey (name & type)
testcase4.request.policykey = null:WHITELIST:Test_WL_policy_01
testcase4.request.enablepolicy = true
testcase4.response = Success|null

#Request for Enable Whitelist (WL) policy with policykey (id & type)
testcase5.name = Enable Whitelist (WL) policy with policykey (id & type)
testcase5.request.policykey = ?:WHITELIST:Test_WL_policy_01
testcase5.request.enablepolicy = true
testcase5.response = Success|null
#Request for Enable ratelimiting (RL) policy with policykey (name & type) 
testcase6.name = Enable ratelimiting (RL) policy with policykey (name & type) 
testcase6.request.policykey = null:RL:Test_RL_policy_01
testcase6.request.enablepolicy = true
testcase6.response = Success|null

#Request for Enable ratelimiting (RL) policy with policykey (id & type) 
testcase7.name = Enable ratelimiting (RL) policy with policykey (id & type) 
testcase7.request.policykey = ?:RL:Test_RL_policy_01
testcase7.request.enablepolicy = true
testcase7.response = Success|null

# Enable Policy

#Request for Enable Authz policy with policykey( name & type)
testcase8.name = Enable Authz policy with policykey( name & type)
testcase8.request.policykey = null:AUTHZ:Test_AUTHZ_policy_01
testcase8.request.enablepolicy = false
testcase8.response = Success|null

#Request for Enable Authz policy with policykey( id & type)
testcase9.name = Enable Authz policy with policykey( id & type)
testcase9.request.policykey = ?:AUTHZ:Test_AUTHZ_policy_01
testcase9.request.enablepolicy = false
testcase9.response = Success|null

#Request for Enable Blacklist (BL) policy with policykey ( name & type) 
testcase10.name = Enable Blacklist (BL) policy with policykey ( name & type) 
testcase10.request.policykey = null:BLACKLIST:Test_BL_policy_01
testcase10.request.enablepolicy = false
testcase10.response = Success|null

#Request for Enable Blacklist (BL) policy with policykey (id & type)
testcase11.name = Enable Blacklist (BL) policy with policykey (id & type)
testcase11.request.policykey = ?:BLACKLIST:Test_BL_policy_01
testcase11.request.enablepolicy = false
testcase11.response = Success|null

#Request for Enable Whitelist (WL) policy with policykey (name & type)
testcase12.name = Enable Whitelist (WL) policy with policykey (name & type)
testcase12.request.policykey = null:WHITELIST:Test_WL_policy_01
testcase12.request.enablepolicy = false
testcase12.response = Success|null

#Request for Enable Whitelist (WL) policy with policykey (id & type)
testcase13.name = Enable Whitelist (WL) policy with policykey (id & type)
testcase13.request.policykey = ?:WHITELIST:Test_WL_policy_01
testcase13.request.enablepolicy = false
testcase13.response = Success|null

#Request for Enable ratelimiting (RL) policy with policykey (name & type) 
testcase14.name = Enable ratelimiting (RL) policy with policykey (name & type) 
testcase14.request.policykey = null:RL:Test_RL_policy_01
testcase14.request.enablepolicy = false
testcase14.response = Success|null

#Request for Enable ratelimiting (RL) policy with policykey (id & type) 
testcase15.name = Enable ratelimiting (RL) policy with policykey (id & type) 
testcase15.request.policykey = ?:RL:Test_RL_policy_01
testcase15.request.enablepolicy = false
testcase15.response = Success|null

# Negative tests - Enable/Disable Policy

#Request for Enable policy which doesn't exist
testcase16.name = Enable policy which doesn't exist
testcase16.request.policykey = null:RL:Test_RL_policy_00
testcase16.request.enablepolicy = true
testcase16.response =  Failure|Invalid input : the Policy does not exist

#Request for Disable policy which doesn't exist
testcase17.name = Disable policy which doesn't exist
testcase17.request.policykey = null:RL:Test_BL_policy_00
testcase17.request.enablepolicy = false
testcase17.response = Failure|Invalid input : the Policy does not exist

#Request for Enable BlackList policy which doesn't have resources assigned
testcase18.name = Enable BlackList policy which doesn't have resources assigned
testcase18.request.policykey = null:BLACKLIST:Test_BL_policy_02
testcase18.request.enablepolicy = true
testcase18.response = Failure|Invalid input : a valid Policy need at least one subject/subjectGroup assigned

#Request for Disable Whitelist policy which doesn't have resources assigned
testcase19.name = Disable Whitelist policy which doesn't have resources assigned
testcase19.request.policykey = null:WHITELIST:Test_WL_policy_01
testcase19.request.enablepolicy = true
testcase19.response = Success|null


