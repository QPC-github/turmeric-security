###############################################################################
# Copyright (c) 2010 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################

# This file consists the input data for ratelimiting - isRateLimited tests 

# PolicyInfo  = PolicyType:PolicyName:PolicyDesc,
# Resource = resourcetype:resourcename:desciption:operations
# GlobalSubjectDomainList,SubjectInclusion,SubjectGroupsInclusion,SubjectExclusion,SubjectGroupsExclusion
# effectdata = effect,duration, rollOverPeriod
# ruleCondition 

 
# Pre-Request subjects, subjectgroups and resources 
prerequisite.subjects = IP:111.111.112.112;IP:111.111.112.113;IP:111.111.112.114;IP:111.111.112.115;IP:111.111.112.116;IP:111.111.112.117;IP:111.111.112.118
prerequisite.subjectgroups = IP:TestSubjectGroup_01:Test subjectgroup:111.111.112.113:111.111.112.114;IP:TestSubjectGroup_02:Test subjectgroup:111.111.112.115:111.111.112.116;IP:TestSubjectGroup_03:Test subjectgroup:111.111.112.117:111.111.112.118
prerequisite.resources =SERVICE:Test_Service_01:TestOp1:TestOp2;SERVICE:Test_Service_02:TestOp3:TestOp4;SERVICE:Test_Service_03:TestOp5:TestOp6

# Pre-Requisite Authz Polices
policy0.policyInfo = AUTHZ:Test_Authz_policy_01:created for findpolicy  api
policy0.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
policy0.includeSubjects = IP:111.111.112.112
policy0.includeSubjectGroups= IP:TestSubjectGroup_01

policy1.policyInfo = AUTHZ:Test_Authz_policy_02:created for findpolicy  api
policy1.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
policy1.includeSubjects = IP:111.111.112.112
policy1.includeSubjectGroups= IP:TestSubjectGroup_02


# Pre-Requisite Blacklist Polices
policy2.policyInfo = BLACKLIST:Test_BL_policy_01:created for findpolicy  api
policy2.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
policy2.includeSubjects = IP:111.111.112.112
policy2.policyEffect =  Effect:BLOCK
policy2.includeSubjectGroups= IP:TestSubjectGroup_01

policy3.policyInfo = BLACKLIST:Test_BL_policy_02:created for findpolicy  api
policy3.resources = SERVICE:Test_Service_02:TestOp3:TestOp4
policy3.includeSubjects = IP:111.111.112.112
policy3.policyEffect =  Effect:BLOCK
policy3.includeSubjectGroups= IP:TestSubjectGroup_02

#Pre-Requisite Blacklist Polices
policy4.policyInfo = BLACKLIST:Test_BL_policy_03:created for findpolicy  api
policy4.resources = SERVICE:Test_Service_02:TestOp3
policy4.includeSubjects = IP:111.111.112.113
policy4.policyEffect =  Effect:BLOCK
policy4.includeSubjectGroups= IP:TestSubjectGroup_02


# Pre-Requisite Whitelist Polices
policy5.policyInfo = WHITELIST:Test_WL_policy_01:created for findpolicy  api
policy5.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
policy5.includeSubjects = IP:111.111.112.112;IP:111.111.112.113;IP:111.111.112.117;IP:111.111.112.118
policy5.policyEffect =  Effect:ALLOW
policy5.includeSubjectGroups= IP:TestSubjectGroup_01

policy6.policyInfo = WHITELIST:Test_WL_policy_02:created for findpolicy  api
policy6.resources = SERVICE:Test_Service_02:TestOp3:TestOp4
policy6.includeSubjects = IP:111.111.112.112
policy6.policyEffect =  Effect:ALLOW
policy6.includeSubjectGroups= IP:TestSubjectGroup_02

# Pre-Requisite ratelimit Polices
policy7.policyInfo = RL:Test_RL_policy_01:created for findpolicy  api
policy7.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
policy7.includeSubjects = IP:111.111.112.112
policy7.policyEffect =  Effect:BLOCK
policy7.includeSubjectGroups= IP:TestSubjectGroup_01
policy7.ruleCondition = test rule$Test_Service_01.count>1500


# Pre-Requisite ratelimit Polices with SG and Subject wildcard
policy8.policyInfo = RL:Test_RL_policy_02:tests SG and subject wildcards
policy8.resources = SERVICE:Test_Service_03:TestOp5:TestOp6
policy8.includeSubjects = IP:111.111.112.117
policy8.policyEffect =  Effect:BLOCK
policy8.ruleCondition = test8 rule$Test_Service_03:TestOp5.SubjectGroup.Subject.count>=10

# Pre-Requisite ratelimit Polices with SG and Subject wildcard
policy9.policyInfo = RL:Test_RL_policy_03:tests SG and subject wildcards II
policy9.resources = SERVICE:Test_Service_03:TestOp5:TestOp6
policy9.policyEffect =  Effect:BLOCK
policy9.includeSubjectGroups= IP:TestSubjectGroup_03
policy9.ruleCondition = test9 rule$Test_Service_03:TestOp6.SubjectGroup.count>=15

