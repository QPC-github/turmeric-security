###############################################################################
# Copyright (c) 2006-2010 eBay Inc. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
###############################################################################
#######################################################################################
# This file consists the input data for SOAGroupMembershipServiceQATests

# There are two formats one for subjectgroup creation and other for request/response creation and validation

# Format for SubjectGroup creation
#  subjectGroupDetails_p# = SubjectGroupName:SubjectGroupType:SubjectGroupDescription:
# (if calculated subjectgroup then set 1 / if non-calculated subjectgroup then set 0):  
# (if calculated then set the name that is associated with the name in CalculatedSubjectGroupConfig.xml file / if non-calculated then the SG is associated with list of subjects(subjectname#subjecttype) separated by &)

# Format for Request/Response creation and validation
# testcase#.number = please provide the next successive unique number
# testcase#.description = Description of the testcase
# testcase#.policyid = policy on which this testcase relies on
# testcase#.request_subjectlist = subject Name:subject Type
# testcase#.request_sglist = comma seperated list of SGs, format is , SG Name : SG Type : \n
# (if calculated then set the name that is associated with the name in CalculatedSubjectGroupConfig.xml file, if non-calculated then set null) 
# testcase#.response_isMember = true/false
########################################################################################## 

# total_testcases - This is optional parameter and is currently ignored, even if this is not provided the tests will loop through all testcases 
total_testcases = 13
# test_to_debug - This is optional parameter, will be useful when you want to debug specific testcases, format comma seperated list of testcase numbers
test_to_debug = 

#Create non-calculated SG :- SGMembership2_OS
subjectGroupDetails_policy1 = SGMembership2_OS:EBAYAPP:SG validation:0:SGMembership_user5#EBAYAPP

#Request for R0
testcase0.number = 0
testcase0.description = testIsMemberOf_nonMatchingSubjectDomainWithSG
testcase0.policyid = policy1
testcase0.request_subjectlist = SGMembership_user5:EBAYAPP
testcase0.request_sglist = SGMembership2_OS:EBAYUSER:null
testcase0.response_isMember = false

#Request for R1
testcase1.number = 1
testcase1.description = testIsMemberOf_MatchingSubjectDomain_subjectExistsInSG
testcase1.policyid = policy1
testcase1.request_subjectlist = SGMembership_user5:EBAYAPP
testcase1.request_sglist = SGMembership2_OS:EBAYAPP:null
testcase1.response_isMember = true

#Create calculated SG :- CalcSG1_OS
subjectGroupDetails_policy2 = CalcSG1_OS:EBAYUSER:SG validation:1:CalcSG1_Test

#Request for R2
testcase2.number = 2
testcase2.description = testIsMemberOf_subjectExistsInCalculatedSG
testcase2.policyid = policy2
testcase2.request_subjectlist = SGMembership_user3:EBAYUSER
testcase2.request_sglist = CalcSG1_OS:EBAYUSER:CalcSG1_Test
testcase2.response_isMember = true

#Create non-calculated SG :- SGMembership1_OS
subjectGroupDetails_policy3 = SGMembership1_OS:EBAYAPP:SG validation:0:SGMembership_user4#EBAYAPP

#Request for R3
testcase3.number = 3
testcase3.description = testIsMemberOf_subjectExistsInSubjectGroup_emptyCalculatorName
testcase3.policyid = policy3
testcase3.request_subjectlist = SGMembership_user4:EBAYAPP
testcase3.request_sglist = SGMembership1_OS:EBAYAPP:
testcase3.response_isMember = true

#Request for R4
testcase4.number = 4
testcase4.description = testIsMemberOf_subjectExistsInSubjectGroup_nullCalculatorName
testcase4.policyid = policy3
testcase4.request_subjectlist = SGMembership_user4:EBAYAPP
testcase4.request_sglist = SGMembership1_OS:EBAYAPP:null
testcase4.response_isMember = true

#Request for R5
testcase5.number = 5
testcase5.description = testIsMemberOf_subjectgroupFunctionExistsbutSubjectNotExists
testcase5.policyid = policy2
testcase5.request_subjectlist = CalcSG_InvalidUser:EBAYUSER
testcase5.request_sglist = CalcSG1_OS:EBAYUSER:CalcSG1_Test
testcase5.response_isMember = false

#Request for R6
testcase6.number = 6
testcase6.description = testIsMemberOf_multipleSG_firstSGFunctionMissingRequiredFuntionLocation_secondSGSupportsSubject
testcase6.policyid = policy2
testcase6.request_subjectlist = SGMembership_user3:EBAYUSER
testcase6.request_sglist = CalcSG_MissingFunctionDef:EBAYUSER:CalcSG_MissingFunctionDef,CalcSG1_OS:EBAYUSER:CalcSG1_Test
testcase6.response_sgName = CalcSG1_OS
testcase6.response_isMember = true

#Request for R7
testcase7.number = 7
testcase7.description = testIsMemberOf_multipleSG_firstSGFunctionMissingImplLogic_secondSGSupportsSubject
testcase7.policyid = policy2
testcase7.request_subjectlist = SGMembership_user3:EBAYUSER
testcase7.request_sglist = CalcSG_MissingImplDef:EBAYUSER:CalcSG_MissingImplDef,CalcSG1_OS:EBAYUSER:CalcSG1_Test
testcase7.response_sgName = CalcSG1_OS
testcase7.response_isMember = true

#Request for R8
testcase8.number = 8
testcase8.description = testIsMemberOf_sgFunctionInvalidImplLogic
testcase8.policyid = policy2
testcase8.request_subjectlist = SGMembership_user3:EBAYUSER
testcase8.request_sglist = CalcSG_MissingImplDef:EBAYUSER:CalcSG_MissingImplDef
testcase8.response_isMember = false

#Request for R9
testcase9.number = 9
testcase9.description = testIsMemberOf_subjectDomainNotMatchWithCalculatedSGDomain_negative
testcase9.policyid = policy2
testcase9.request_subjectlist = SGMembership_user3:EBAYAPP
testcase9.request_sglist = CalcSG1_OS:EBAYUSER:CalcSG1_Test
testcase9.response_isMember = false

#Request for R10
testcase10.number = 10
testcase10.description = testIsMemberOf_domainMismatchSubjectAndSGNegative
testcase10.policyid = policy3
testcase10.request_subjectlist = SGMembership_user3:EBAYUSER
testcase10.request_sglist = SGMembership1_OS:EBAYAPP:null
testcase10.response_isMember = false

#Request for R11
testcase11.number = 11
testcase11.description = testIsMemberOf_domainMismatchSubjectAndSGs_negative
testcase11.policyid = policy2,policy3
testcase11.request_subjectlist = SGMembership_user3:EBAYUSER
testcase11.request_sglist = CalcSG1_OS:EBAYAPP:CalcSG1_Test,SGMembership1_OS:EBAYAPP:null
testcase11.response_isMember = false

#Create calculated SG :- CalcSG3_OS
subjectGroupDetails_policy4 = CalcSG3_OS:EBAYUSER:SG validation:1:SG_CalcSG3

#Request for R12
testcase12.number = 12
testcase12.description = testIsMemberOf_sgFunctionName(CalcSG3_OS)IsDiffFromIsCalculatedName(SG_CalcSG3)_SubjectExists_Positive
testcase12.policyid = policy4
testcase12.request_subjectlist = SGMembership_user3:EBAYUSER
testcase12.request_sglist = CalcSG3_OS:EBAYUSER:SG_CalcSG3
testcase12.response_sgname = CalcSG3_OS
testcase12.response_isMember = true