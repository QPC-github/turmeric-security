###############################################################################
# Copyright (c) 2006-2010 eBay Inc. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
###############################################################################


# This file consists the input data for policyservice-  create policy tests
# The format of request is -->  List of Policies
# PolicyInfo  = PolicyType:PolicyName:PolicyDesc,
# Resource = resourcetype:resourcename:desciption:operations
# GlobalSubjectDomainList,SubjectInclusion,SubjectGroupsInclusion,SubjectExclusion,SubjectGroupsExclusion
# effectdata = effect,duration, rollOverPeriod
# The response format is --> AckValue|errormessage
 

# # Pre-Requisite subjects, subjectgroups and resources 
testcase.prerequisite.subjects =IP:111.111.112.112;IP:111.111.112.113
testcase.prerequisite.subjectgroups = IP:TestSubjectGroup_01:Test subjectgroup:111.111.112.112:111.111.112.113
testcase.prerequisite.resources =SERVICE:Test_Service_01:TestOp1:TestOp2;SERVICE:Test_Service_02:TestOp3:TestOp4

#Request for create policy of type Authz
testcase0.name = CreatePolicy of Type Authz
testcase0.request.policyInfo = AUTHZ:Test_Authz_policy_01:testing createpolicy api
testcase0.request.resources = SERVICE:Test_Service_01:TestOp1:TestOp2
testcase0.request.includeSubjects = IP:111.111.112.112
testcase0.response = Success|null

#Request for create policy of type Authz with multiple resources
testcase1.name = CreatePolicy of Type Authz
testcase1.request.policyInfo = AUTHZ:Test_Authz_policy_01:testing createpolicy api
testcase1.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase1.request.includeSubjects = IP:111.111.112.112
testcase1.response = Success|null

#Request for create policy of type Authz with multiple resources and specific operations

testcase2.name = CreatePolicy of Type Authz
testcase2.request.policyInfo = AUTHZ:Test_Authz_policy_01:testing createpolicy api
testcase2.request.resources = SERVICE:Test_Service_01:TestOp2;SERVICE:Test_Service_02:TestOp4
testcase2.request.includeSubjects = IP:111.111.112.112
testcase2.response = Success|null

#Request for create policy of type Authz with include subjects & subjectgroups  
testcase3.name = CreatePolicy of Type Authz
testcase3.request.policyInfo = AUTHZ:Test_Authz_policy_01:testing createpolicy api
testcase3.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase3.request.includeSubjects = IP:111.111.112.112
testcase3.request.includeSubjectGroups = IP:TestSubjectGroup_01
testcase3.response = Success|null

#Request for create policy of type Authz with exclude subjects & subjectgroups
testcase4.name = CreatePolicy of Type Authz
testcase4.request.policyInfo = AUTHZ:Test_Authz_policy_02:testing createpolicy api
testcase4.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase4.request.excludeSubjects = IP:111.111.112.112
testcase4.request.excludeSubjectGroups = IP:TestSubjectGroup_01
testcase4.response = Success|null

#Request for create policy of type Authz with global subject domains
testcase5.name = CreatePolicy of Type Authz
testcase5.request.policyInfo = AUTHZ:Test_Authz_policy_02:testing createpolicy api
testcase5.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase5.request.globalSubjectdomains = IP
testcase5.response = Success|null

# Request for create policy of Type Blacklist
testcase6.name = CreatePolicy of Type Blacklist
testcase6.request.policyInfo = BLACKLIST:Test_BL_policy_01:testing createpolicy api
testcase6.request.resources = SERVICE:Test_Service_01
testcase6.request.includeSubjects = IP:111.111.112.112
testcase6.request.policyEffect = BLOCK
testcase6.response = Success|null

#Request for create policy of type Blacklist with multiple resources and specific operations

testcase7.name = CreatePolicy of Type Blacklist with multiple resources and specific operations
testcase7.request.policyInfo = BLACKLIST:Test_BL_policy_01:testing createpolicy api
testcase7.request.resources = SERVICE:Test_Service_01:TestOp2;SERVICE:Test_Service_02:TestOp4
testcase7.request.includeSubjects = IP:111.111.112.112
testcase7.request.policyEffect = BLOCK
testcase7.response = Success|null

#Request for create policy of type Blacklist with include subjects & subjectgroups  
testcase8.name = CreatePolicy of Type Blacklist with include subjects & subjectgroups  
testcase8.request.policyInfo = BLACKLIST:Test_BL_policy_01:testing createpolicy api
testcase8.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase8.request.includeSubjects = IP:111.111.112.112
testcase8.request.includeSubjectGroups = IP:TestSubjectGroup_01
testcase8.request.policyEffect = BLOCK
testcase8.response = Success|null

#Request for create policy of type Blacklist with exclude subjects & subjectgroups
testcase9.name = CreatePolicy of Type Blacklist with exclude subjects & subjectgroups
testcase9.request.policyInfo = BLACKLIST:Test_BL_policy_01:testing createpolicy api
testcase9.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase9.request.excludeSubjects = IP:111.111.112.112
testcase9.request.excludeSubjectGroups = IP:TestSubjectGroup_01
testcase9.request.policyEffect = BLOCK
testcase9.response = Success|null

#Request for create policy of type Blacklist with global subject domains
testcase10.name = CreatePolicy of Type Blacklist with global subject domains
testcase10.request.policyInfo = BLACKLIST:Test_BL_policy_01:testing createpolicy api
testcase10.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase10.request.globalSubjectdomains = IP
testcase10.request.policyEffect = ALLOW
testcase10.response = Success|null

# Request for create policy of Type Whitelist
testcase11.name = CreatePolicy of Type Whitelist
testcase11.request.policyInfo = WHITELIST:Test_WL_policy_01:testing createpolicy api
testcase11.request.resources = SERVICE:Test_Service_01
testcase11.request.includeSubjects = IP:111.111.112.112
testcase11.request.policyEffect = BLOCK
testcase11.response = Success|null
#Request for create policy of type Whitelist with multiple resources and specific operations

testcase12.name = CreatePolicy of Type Whitelist with multiple resources and specific operations
testcase12.request.policyInfo = WHITELIST:Test_WL_policy_01:testing createpolicy api
testcase12.request.resources = SERVICE:Test_Service_01:TestOp2;SERVICE:Test_Service_02:TestOp4
testcase12.request.includeSubjects = IP:111.111.112.112
testcase12.request.policyEffect = ALLOW
testcase12.response = Success|null

#Request for create policy of type Whitelist with include subjects & subjectgroups  
testcase13.name = CreatePolicy of Type Whitelist with include subjects & subjectgroups
testcase13.request.policyInfo = WHITELIST:Test_WL_policy_01:testing createpolicy api
testcase13.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase13.request.includeSubjects = IP:111.111.112.112
testcase13.request.includeSubjectGroups = IP:TestSubjectGroup_01
testcase13.request.policyEffect = ALLOW
testcase13.response = Success|null

#Request for create policy of type Whitelist with exclude subjects & subjectgroups
testcase14.name = CreatePolicy of Type Whitelist with exclude subjects & subjectgroups
testcase14.request.policyInfo = WHITELIST:Test_WL_policy_01:testing createpolicy api
testcase14.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase14.request.excludeSubjects = IP:111.111.112.112
testcase14.request.excludeSubjectGroups = IP:TestSubjectGroup_01
testcase14.request.policyEffect = ALLOW
testcase14.response = Success|null

#Request for create policy of type Whitelist with global subject domains
testcase15.name = CreatePolicy of Type Whitelist with global subject domains
testcase15.request.policyInfo = WHITELIST:Test_WL_policy_01testing createpolicy api
testcase15.request.resources = SERVICE:Test_Service_01;SERVICE:Test_Service_02
testcase15.request.globalSubjectdomains = IP
testcase15.request.policyEffect = ALLOW
testcase15.response = Success|null
